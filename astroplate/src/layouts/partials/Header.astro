---
import Logo from "@/components/Logo.astro";
import ThemeSwitcher from "@/components/ThemeSwitcher.astro";
import config from "@/config/config.json";
import LanguageSwitcher from "@/helpers/LanguageSwitcher";
import {
  getLangFromUrl,
  getTranslations,
  slugSelector,
} from "@/lib/utils/languageParser";
import type { ContentEntryMap } from "astro:content";
import { IoSearch } from "react-icons/io5";

let lang = getLangFromUrl(Astro.url);
const menu = await getTranslations(lang as keyof ContentEntryMap);

const { navigation_button, settings } = config;
const { default_language } = config.settings;
const { pathname } = Astro.url;
const { get_started } = await getTranslations(lang as keyof ContentEntryMap);

const disabledLanguages = config.settings.disable_languages as string[];
if (disabledLanguages.includes(lang)) {
  lang = default_language;
}
---

<header class={`header z-30 ${settings.sticky_header && "sticky top-0"}`}>
  <nav class="container navbar">
    {/* logo */}
    <div class="order-0">
      <Logo />
    </div>
    {/* navbar toggler */}
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      for="nav-toggle"
      class="flex items-center order-3 cursor-pointer lg:hidden text-dark dark:text-white lg:order-1"
    >
      <svg id="show-button" class="block h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
      <svg id="hide-button" class="hidden h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Close</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>
    {/* /navbar toggler */}

    <ul
      id="nav-menu"
      class="order-3 hidden w-full pb-6 navbar-nav lg:order-1 lg:flex lg:w-auto lg:space-x-2 lg:pb-0 xl:space-x-8"
    >
      {
        menu?.main.map((menu: any) => (
          <>
            {menu.hasChildren ? (
              <li class="relative nav-item nav-dropdown group">
                <span
                  class={`nav-link inline-flex items-center ${
                    menu.children
                      ?.map(({ url }: { url: string }) =>
                        slugSelector(url, lang),
                      )
                      .includes(pathname)
                      ? "active"
                      : ""
                  }`}
                >
                  {menu.name}
                  <svg class="w-4 h-4 fill-current" viewBox="0 0 20 20">
                    <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                  </svg>
                </span>
                <ul class="hidden nav-dropdown-list group-hover:block lg:invisible lg:absolute lg:block lg:opacity-0 lg:group-hover:visible lg:group-hover:opacity-100">
                  {menu.children?.map((child: any) => (
                    <li class="nav-dropdown-item">
                      <a
                        href={slugSelector(child.url, lang)}
                        aria-label={child.name}
                        class={`nav-dropdown-link block ${
                          pathname === slugSelector(child.url, lang) && "active"
                        }`}
                      >
                        {child.name}
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            ) : (
              <li class="nav-item">
                <a
                  href={slugSelector(menu.url, lang)}
                  class={`nav-link block ${
                    pathname === slugSelector(menu.url, lang) && "active"
                  }`}
                >
                  {menu.name}
                </a>
              </li>
            )}
          </>
        ))
      }
      {/* Navigation button */}
      {
        navigation_button.enable && (
          <li class="inline-block mt-4 lg:hidden">
            <a
              class="btn btn-outline-primary btn-sm"
              href={navigation_button.link}
            >
              {get_started}
            </a>
          </li>
        )
      }
    </ul>

    <div class="flex items-center order-1 ml-auto md:order-2 lg:ml-0">
      {/* Search button */}
      {
        settings.search && (
          <button
            class="inline-block pr-5 mr-5 text-xl border-r border-border text-dark hover:text-primary dark:border-darkmode-border dark:text-white dark:hover:text-darkmode-primary"
            aria-label="search"
            data-search-trigger
          >
            <IoSearch />
          </button>
        )
      }
      {/* Theme switcher */}
      <ThemeSwitcher className="mr-5" />

      {/* Language switcher */}
      <LanguageSwitcher client:load lang={lang} pathname={pathname} />
    </div>
  </nav>
</header>
